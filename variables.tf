// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

variable "product_family" {
  description = <<EOF
    (Required) Name of the product family for which the resource is created.
    Example: org_name, department_name.
  EOF
  type        = string
  default     = "dso"
}

variable "product_service" {
  description = <<EOF
    (Required) Name of the product service for which the resource is created.
    For example, backend, frontend, middleware etc.
  EOF
  type        = string
  default     = "kube"
}

variable "environment" {
  description = "Environment in which the resource should be provisioned like dev, qa, prod etc."
  type        = string
  default     = "dev"
}

variable "environment_number" {
  description = "The environment count for the respective environment. Defaults to 000. Increments in value of 1"
  type        = string
  default     = "000"
}

variable "resource_number" {
  description = "The resource count for the respective resource. Defaults to 000. Increments in value of 1"
  type        = string
  default     = "000"
}

variable "region" {
  description = "AWS Region in which the infra needs to be provisioned"
  type        = string
  default     = "eastus"
}

variable "resource_names_map" {
  description = "A map of key to resource_name that will be used by tf-launch-module_library-resource_name to generate resource names"
  type = map(object(
    {
      name       = string
      max_length = optional(number, 60)
    }
  ))
  default = {
    acr = {
      name       = "acr"
      max_length = 60
    }
    rg = {
      name       = "rg"
      max_length = 60
    }
    private_endpoint = {
      name       = "pe"
      max_length = 60
    }
  }
}

variable "use_azure_region_abbr" {
  description = "Whether to use Azure region abbreviation for azure region"
  type        = bool
  default     = true
}

variable "resource_group_name" {
  description = "Name of the resource group in which the AKS cluster will be created. If not provided, this module will create one"
  type        = string
  default     = null
}

variable "create_resource_group" {
  description = "Whether to create a new resource group or use an existing one"
  type        = bool
  default     = true
}

variable "container_registry_name" {
  type        = string
  description = "Container Registry name. If provided, then the name generated by the naming module won't be used"
  default     = null
}

variable "sku" {
  description = "The SKU name of the container registry. Only Premium is supported for Private Link."
  type        = string
  default     = "Premium"
}

variable "admin_enabled" {
  description = "Specifies whether the admin user is enabled. Defaults to true. When enabled, password tokens are generated to be used with docker login"
  type        = bool
  default     = false
}

variable "retention_policy" {
  description = "Set a retention policy for untagged manifests"
  type = object({
    days    = optional(number)
    enabled = optional(bool)
  })
  default = null
}

variable "identity_ids" {
  description = <<EOT
    Specifies a list of user managed identity ids to be assigned.
    This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`
  EOT
  type        = list(string)
  default     = null
}

variable "encryption" {
  description = "Encrypt registry using a customer-managed key"
  type = object({
    key_vault_key_id   = string
    identity_client_id = string
  })
  default = null
}

variable "public_network_access_enabled" {
  description = "Whether public network access is allowed for the container registry. Defaults to true."
  type        = bool
  default     = true
}

variable "network_rule_bypass_option" {
  description = <<EOT
    Whether to allow trusted Azure services to access a network restricted Container Registry? Possible values are
    None and AzureServices. Defaults to AzureServices
  EOT
  type        = string
  default     = "AzureServices"
}

variable "zone_redundancy_enabled" {
  description = <<EOT
    Whether zone redundancy is enabled for this Container Registry? Changing this forces a new resource to be created.
    Defaults to false
  EOT
  type        = bool
  default     = false
}

variable "georeplications" {
  description = "If specified, the ACR will be replicated to other regions specified in this block"
  type = map(object({
    location                  = string
    regional_endpoint_enabled = bool
    zone_redundancy_enabled   = bool
  }))

  default = {}
}

variable "network_rule_set" {
  description = <<EOT
    Network rules to explicitly allow IP ranges
    CIDR ranges should be provided
  EOT
  type        = list(string)
  default     = []
}

variable "acr_subnet_id" {
  description = "The ID of the subnet in which the private endpoint should be created."
  type        = string
}

variable "tags" {
  description = "Custom tags for the  container registry"
  type        = map(string)
  default     = {}
}
